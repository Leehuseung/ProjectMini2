<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.org.jejutour.repository.dao.MemberMapper">	
	<resultMap id="MemberMap" type="member">
		<result column="member_no" property="memberNo" />
		<result column="id" property="id" />
		<result column="pass" property="pass" />
		<result column="salt" property="salt" />
		<result column="email" property="email" />
		<result column="join_date" property="joinDate" />
		<result column="name" property="name" />
		<result column="report_cnt" property="reportCnt" />
	</resultMap>
	
	<!-- 회원등록 -->
	<insert id="insertMember" parameterType="member">
		insert into tb_member(
			member_no, id, pass, email, name, salt
		) values (
			s_member_no.nextval, #{id}, #{pass}, 
			#{email}, #{name}, #{salt}
		) 
	</insert>
	
	<!-- 아이디 중복체크 -->
	<select id="selectId" parameterType="String" resultType="int">
		select count(*)
		  from tb_member
		 where id = #{id}		  
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="selectEmail" parameterType="String" resultType="int">
		select count(*)
		  from tb_member
		 where email = #{email}		  
	</select>
	
	<!-- 로그인 -->
	<select id="selectLogin" parameterType="member" resultMap="MemberMap">
		select *
		  from tb_member
		 where id = #{id}
		   and pass = #{pass}
	</select>
	
	<!-- 암호화된 비밀번호 찾기 -->
	<select id="selectSaltById" parameterType="String" resultType="String">
		select salt
		  from tb_member
		 where id = #{id}
	</select>	
	
	<!-- 내 정보 -->
	<select id="selectInfo" parameterType="String" resultType="member">
		select id, name, email
		  from tb_member
		 where id = #{id}
	</select>
	
	<!-- 내 정보 비밀번호 변경 -->
	<update id="updateInfo" parameterType="member">
		update tb_member
		   set pass = #{pass},
		       salt = #{salt}
		 where id = #{id}
	</update>
	
	<!-- 아이디 찾기 이메일 발송 -->
	<select id="findId" parameterType="member" resultType="String">
		select id
		  from tb_member
		 where name = #{name}
		   and email = #{email}
	</select>
	
	<!-- 임시비밀번호 이메일 발송 -->
	<update id="findPass" parameterType="member">
		update tb_member
		   set pass = #{pass}, 
		       salt = #{salt}		   
		 where id = #{id}
		   and name = #{name}
		   and email = #{email}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteInfo" parameterType="member">
		delete 
		  from tb_member
		 where id = #{id}
		   and pass = #{pass}	
	</delete>
	
	<!-- 회원 전체목록 페이징추가 -->
	<select id="selectMemberList" parameterType="member" resultMap="MemberMap">
		select *
 		  from (select rownum rnum, a.*
         		  from (select *
                 		  from tb_member
                 		 order by member_no
                 	   ) a
        		)
		 where rnum between #{begin} and #{end}
	</select>
	
	<!-- 회원 전체목록 페이징 번호 -->
	<select id="selectMemberListCount" resultType="int">
		select count(*)
		  from tb_member
	</select>
	
	<!-- 회원강퇴 -->
	<delete id="memberBan" parameterType="String">
		delete
		  from tb_member
		 where member_no = #{memberNo}
	</delete>
</mapper>











