<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.org.jejutour.repository.dao.ReviewMapper">
	<resultMap id="reviewMap" type="review">
		<result column="board_no" property="boardNo" />
		<result column="review_category_no" property="reviewCategoryNo" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="rating_category_no" property="ratingCategoryNo" />
		<result column="like_cnt" property="likeCnt" />
		<result column="view_cnt" property="viewCnt" />
		<result column="write_date" property="writeDate" />
		<result column="member_no" property="memberNo" />
	</resultMap>
	
	<resultMap id="MemberMap" type="member">
		<result column="member_no" property="memberNo" />
		<result column="id" property="id" />
		<result column="pass" property="pass" />
		<result column="email" property="email" />
		<result column="join_date" property="joinDate" />
		<result column="name" property="name" />
		<result column="report_cnt" property="reportCnt" />
	</resultMap>

	<!-- 리뷰 등록하기 
		selectKey 글등록이 되기 전에 글번호가 붙여져야 해서 사용.
	-->
	<insert id="insertReview" parameterType="review">
       <selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
          select s_review_no.nextval from dual
       </selectKey>
		insert into tb_review(
			board_no, review_category_no, title, content, rating_category_no, member_no
		)values (
			#{boardNo}, #{reviewCategoryNo},#{title},#{content},#{ratingCategoryNo}, #{memberNo}
		)
	</insert>
	
	<!-- 글수정 -->
	
	<update id="updateReview" parameterType="review">
		update tb_review
		   set review_category_no = #{reviewCategoryNo},
		   	   title = #{title},
		   	   content = #{content},
		   	   rating_category_no = #{ratingCategoryNo}
		 where board_no = #{boardNo}
		   and member_no = #{memberNo}
		   	   	
	</update>
	
	<!-- 등록 후 상세보기 -->
	<select id="detailReviewNo" parameterType="int" resultMap="reviewMap">
		select a.view_cnt,
				a.board_no,
				(select name from tb_category where code_no = review_category_no) as review_category_no, 
				(select name from tb_category where code_no = rating_category_no) as rating_category_no,
				a.title, 
				a.content, 
				b.name,
				a.member_no,
			    a.write_date, 
			    a.like_cnt,
			    a.view_cnt
		  from  tb_review a
		  inner join tb_member b 
		     on a.member_no = b.member_no
		  where a.board_no = #{boardNo}
	</select>

	<!-- 수정폼 보여주기  -->
	<select id="selectFormReviewNo" parameterType="int" resultMap="reviewMap">
		select  a.review_category_no, 
				a.rating_category_no,
				a.title, 
				a.content,
				a.board_no
		  from  tb_review a
		  inner join tb_member b 
		     on a.member_no = b.member_no
		  where a.board_no = #{boardNo}
	</select>
	
	<!--조회수 증가-->
	<update id="updateViewCnt" parameterType="int" >
		update tb_review
		   set view_cnt = view_cnt + 1
		 where board_no = #{boardNo}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteReview" parameterType="review">
		delete
		  from tb_review
		 where board_no=#{boardNo}
		   and member_no =#{memberNo}
	</delete>
	
	
	<!-- 전체조회 -->
	<select id="selectListReview" parameterType="rpage" resultMap="reviewMap">
	 select a.board_no,
      		b.name, 
       		a.title,
       		(select name from tb_category where code_no = review_category_no) as review_category_no,
       		a.write_date,
       		a.view_cnt,
       		a.like_cnt,
       		b.member_no
  	   from (select rownum rnum, c.*
               from (select *
                       from tb_review
                      order by board_no desc) c) a
      inner join tb_member b
   		 on a.member_no = b.member_no
	  where rnum between #{begin} and #{end}
	</select>
	
	<!-- 전체 게시물 수 -->
	<select id="selectReviewCount" resultType="int">
		select count(*)
		  from tb_review
	</select>
	
	<!-- 페이징 없을 때!
	<select id="selectListReview" parameterType="review" resultMap="reviewMap">
		select a.board_no,
			   b.name, 
			   a.title,
			   (select name from tb_category where code_no = review_category_no) as review_category_no,
			   a.write_date,
			   a.view_cnt,
			   a.like_cnt
		  from tb_review a
		 inner join tb_member b
		    on a.member_no = b.member_no
		 order by board_no desc
	</select> -->
	
	<!--들어갔는지체크..??  -->
	<select id="writeCheck" parameterType="review" resultType="int">
		select count(*)
		  from tb_review
		 where review_category_no=#{reviewCategoryNo}
		   and title=#{title}
		   and content=#{content}
		   and rating_category_no = #{ratingCategoryNo}
	</select>
	
	
	<!--댓글 -->
	<resultMap id="commentMap" type="rcomment" >
		<result column="comment_no" property="commentNo"/>
		<result column="board_no" property="boardNo"/>
		<result column="report_cnt" property="reportCnt"/>
		<result column="like_cnt" property="likeCnt"/>
		<result column="content" property="content"/>
		<result column="write_date" property="writeDate"/>
		<result column="member_no" property="memberNo" />
	</resultMap>
	
	<!-- 댓글 등록 -->
	<insert id="insertComment" parameterType="rcomment">
		insert into tb_review_comment(comment_no, board_no,content, member_no)
		values(s_review_comment_no.nextval,#{boardNo},#{content}, #{memberNo})
	</insert>  
	
	<!-- 전체 댓글 수 -->
	<select id="selectReviewCommentCount" parameterType="int" resultType="int">
		select count(*)
		  from tb_review_comment a
		 inner join tb_review b
		    on a.board_no = b.board_no
		 where b.board_no = #{boardNo}
	</select>
	

	<!-- 댓글조회 -->	
	<select id="selectListCommentByNo" parameterType="int" resultMap="commentMap">
		select a.comment_no,
			   a.board_no,
			   a.write_date, 
			   b.name,
			   a.content,
			   b.member_no
		  from tb_review_comment a
		 inner join tb_member b
		    on a.member_no = b.member_no
		 where a.board_no = #{boardNo}
		 order by comment_no desc
	</select> 
	
	<delete id="deleteComment" parameterType="rcomment">
		delete
		  from tb_review_comment
		 where comment_no=#{commentNo}
	</delete>
</mapper>
























